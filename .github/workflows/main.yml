name: Angular GitHub CI
on:
  push:
    branches:
      - "*"
jobs:
  dev-deploy:
    if: github.event.head_commit.message != 'Updating App version'
    name: dev-deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v2
        with:
            persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
            fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
            github_token: ${{ secrets.DEPLOY_TOKEN }}   
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
          version: 0
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
            echo "GITHUB_REPOSITORY_SLUG=$GITHUB_REPOSITORY_SLUG"
            echo "GITHUB_REPOSITORY_OWNER=$GITHUB_REPOSITORY_OWNER"
            echo "GITHUB_REPOSITORY_OWNER_SLUG=$GITHUB_REPOSITORY_OWNER_SLUG"
            echo "GITHUB_REPOSITORY_NAME=$GITHUB_REPOSITORY_NAME"
            echo "GITHUB_REPOSITORY_NAME_SLUG=$GITHUB_REPOSITORY_NAME_SLUG"
            echo "GITHUB_REF_SLUG=$GITHUB_REF_SLUG"
            echo "GITHUB_REF_NAME=$GITHUB_REF_NAME"
            echo "GITHUB_REF_NAME_SLUG=$GITHUB_REF_NAME_SLUG"
            echo "GITHUB_SHA_SHORT=$GITHUB_SHA_SHORT"
            npm install --legacy-peer-deps
            npm i @angular/cli --legacy-peer-deps
      - name: DEV Build
        run: |
            npm version ${{env.version}} --no-git-tag-version --allow-same-version
            npm version patch -m "[RELEASE] %s" --no-git-tag-version --allow-same-version
            CURRENT_VERSION=$(node -p "require('./package.json').version")
            UPDATED_VERSION=$(node -p "require('./package.json').version")
            git config --global user.email ${{secrets.GIT_EMAIL_DEPLOY}}
            git config --global user.name ${{secrets.GIT_USER_DEPLOY}}
            git add package.json
            [ -f package-lock.json ] && git add package-lock.json
            git remote set-url origin https://${{ secrets.DEPLOY_TOKEN }}@github.com/iTBharathexim/DeltaTradeGlobal.git
            git commit -m "Updating App version"
      - name: App Version Change
        run: |
            git config --global user.email ${{secrets.GIT_EMAIL_DEPLOY}}
            git config --global user.name ${{secrets.GIT_USER_DEPLOY}}
            git remote set-url origin https://${{ secrets.DEPLOY_TOKEN }}@github.com/iTBharathexim/DeltaTradeGlobal.git
            git push origin ${{ env.BRANCH_NAME }}
  steps:
        if: github.event.head_commit.message != 'Updating App version'
        name: S3-Zip-Upload
        runs-on: ubuntu-latest
        strategy:
          matrix:
            archive: [ "zip" ]
        steps:
          - uses: actions/checkout@v2
            with:
                persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
                fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
                github_token: ${{ secrets.DEPLOY_TOKEN }}  
          - uses: ksm2/archive-action@v1
            with:
              format: ${{ matrix.archive }}
              name: ${{ env.BRANCH_NAME }}_${{github.sha}}
              include: "**/*.(ts|js|css|html)"
          - name: DeployZip
            run: |
                ls
          - uses: actions/checkout@v2
          - name: Upload ZIP to S3
            uses: NotCoffee418/s3-zip-upload@v1.3
            env:
              AWS_SECRET_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
              AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
              AWS_REGION: ap-south-1
              BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
              SOURCE_MODE: ZIP
              SOURCE_PATH: .
              DEST_FILE: ${{ env.BRANCH_NAME }}_${{github.sha}}.zip
